version: '3.8'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://college_user:college_pass@db:5432/college_db
      - SESSION_SECRET=your-secret-key-change-in-production
      - FLASK_ENV=production
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./static/uploads:/app/static/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=college_db
      - POSTGRES_USER=college_user
      - POSTGRES_PASSWORD=college_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U college_user -d college_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery_worker:
    build: .
    command: celery -A tasks worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://college_user:college_pass@db:5432/college_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    restart: unless-stopped

  celery_beat:
    build: .
    command: celery -A tasks beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://college_user:college_pass@db:5432/college_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - db
    volumes:
      - .:/app
    restart: unless-stopped

  flower:
    build: .
    command: celery -A tasks flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - celery_worker
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: